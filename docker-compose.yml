# Обязательный параметр версии интерпретатора для этого файла
version: '3.0'
# Список сервисов (контейнеров), которые необходимо поднять при старте
services:
  # Первым поднимается контейнер с веб сервером nginx - смотри файлы в docker/nginx
  nginx:
    # TODO требуется описание, что тут может быть
    build:
      # Директория, из которой необходимо взять файлы настроек для контейнера
      context: ./docker/nginx
    # Директории, разделитель двоеточие, где первая, локальная директория, вторая в контейнере, содержащие одно и тоже
    volumes:
      # TODO почему тут с тире начинается?
      - ./app:/webAppDir
    # Имя контейнера, где могут использоваться переменные с файла .env, расположенного в той же директории
    container_name: ${PROJECT_NAME}-nginx
    # В случае остановки, возобновлять работу контейнера
    restart: always
    # Порты, для проброски, разделитель двоеточие, первый локальный, второй контейнера, смотри docker/nginx/default.conf
    # Если указано 8123:80, то результат http://127.0.0.1:8123/, хотя nginx в контейнере работает на 80 порту
    ports:
      - "8123:80"

  # Вторым поднимаем контейнер с php-fpm
  php-fpm:
    # TODO требуется описание, что тут может быть
    build:
      # Директория, из которой необходимо взять файлы настроек для контейнера
      context: ./docker/php-fpm
    # Директории, разделитель двоеточие, где первая, локальная директория, вторая в контейнере, содержащие одно и тоже
    volumes:
      # TODO почему тут с тире начинается?
      - ./app:/webAppDir
    # Имя контейнера, где могут использоваться переменные с файла .env, расположенного в той же директории
    container_name: ${PROJECT_NAME}-php-fpm
    # В случае остановки, возобновлять работу контейнера
    restart: always
    # Запуск контейнера (php-fpm) зависит от того, запущен ли указанный (mysql), т.е. ждем, пока не запустится (mysql)
    depends_on:
      # Тот самый контейнер (mysql), который должен буть запущен перед пуском того, в котором (php-fpm) пишется это
      - mysql

  #php-cli:
    #build:
      #context: ./docker/php-cli
    #volumes:
      #- ./app:/webAppDir
    #command: sleep 10000
    #container_name: ${PROJECT_NAME}-php-cli

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql:/var/lib/mysql
    container_name: ${PROJECT_NAME}-mysql
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_DUMP_PATH=${MYSQL_DUMP_PATH}"

volumes:
  mysql:
