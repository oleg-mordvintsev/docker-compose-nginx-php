server {

    # Порт, который будет слушать nginx, и который пишется вторым в директиве ports в файле docker-compose.yml
    listen 80;

    # Индексный файл, т.е. файл который будет автоматически подставляться при указании корня сайта или директории
    index index.php;

    # Если нужны логи ошибок и доступа, то они доступны в контейнере, смотрите README.md и описание как войти в bash
    # error_log /var/log/nginx/error.log;
    # access_log /var/log/nginx/access.log;

    # Корневая директория проекта, которы смотрит на локальную директорию /app
    root /webAppDir;

    # Максимальный размер тела запроса, по умолчанию 1m, а значение 0 отключает проверку, часто ставят 128m
    client_max_body_size 16m;

    # Все существующие файлы отдавать как есть, иначе, передаются в index.php со всеми аргументами
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # Если запрашивается php файл, то требуется обработка с помощью php-fpm интерпретатора
    location ~ \.php$ {
        # Убираем уязвимость https://habr.com/ru/post/100961/
        fastcgi_param PHP_VALUE cgi.fix_pathinfo=0;
        # Если нет нужного php файла, то 404 ошибка, так же убирает уязвимость выше
        try_files $fastcgi_script_name =404;
        # Выделяем значение $fastcgi_path_info
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # На каком контейнере докера и на каком порту слушаем PHP
        fastcgi_pass php-fpm:9000;
        # Индексный файл для, в данном случае, FPM
        fastcgi_index index.php;
        # Подключаем файл с основными параметрами для FASTCGI (смотри в контейнере)
        include fastcgi_params;
        # Полный путь до скрипта
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # Значение директории введенного URL
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

}